[{"id":0,"href":"/gitctx/docs/intro/","title":"Documentation","section":"Docs","content":" Introduction # What is gitctx? # gitctx is a lightweight command-line tool written in Go that helps developers manage and switch between multiple Git contexts (identities) effortlessly.\nWhether you contribute to open-source projects, work across multiple companies, or just want to separate personal and professional commits, gitctx makes identity management painless.\nIt centralizes your .gitconfig profiles in one place and gives you commands to:\nStore unlimited named Git contexts Apply a context globally or locally to a single repo Quickly toggle between your current and previous identity Manage SSH and GPG keys per context Mermaid Diagram # flowchart TD subgraph User A[gitctx CLI] end subgraph Storage B1[~/.gitctx/context-work.gitconfig] B2[~/.gitctx/context-personal.gitconfig] B3[~/.gitctx/metadata.json] end subgraph Git System C1[\u0026#34;~/.gitconfig (global)\u0026#34;] C2[\u0026#34;.git/config (local)\u0026#34;] end A --\u0026gt; |add| B1 A --\u0026gt; |add| B2 A --\u0026gt; |add| B3 A --\u0026gt; |apply \u0026lt;name\u0026gt;| C1 A --\u0026gt; |local apply \u0026lt;name\u0026gt;| C2 A --\u0026gt; |local discard| C2 A --\u0026gt; |switch| C1 A --\u0026gt; |delete| B1 A --\u0026gt; |delete| B2 A --\u0026gt; |uses metadata| B3 style B3 fill:#fef3c7,stroke:#fbbf24,stroke-width:2px style A fill:#e0f2fe,stroke:#38bdf8,stroke-width:2px style C1 fill:#dcfce7,stroke:#22c55e,stroke-width:2px style C2 fill:#dcfce7,stroke:#22c55e,stroke-width:2px Why use gitctx? # Switching Git identities manually is error-prone and time-consuming. You’ve probably:\nCommitted with the wrong email to the wrong repo Spent time editing .gitconfig by hand Forgotten to switch back to your personal profile before pushing With gitctx, you can:\nChange identities in seconds Keep your Git configs organized and easy to back up Avoid costly mistakes by clearly tracking your current identity Integrate with tools like LazyGit for even smoother workflows How it works # gitctx stores your contexts in ~/.gitctx/ as plain .gitconfig files and tracks metadata like:\nThe current context in use The previous context (for quick switching) When you apply a context:\nGlobal mode updates your main ~/.gitconfig Local mode applies only to the nearest repository (.git/config) Because contexts are just .gitconfig files, you can edit them manually or import/export them easily.\nExample usage # # Create a new context interactively gitctx add work # Apply it globally gitctx apply work # Switch back to your previous context gitctx switch # Apply a context only for the current repository gitctx local apply personal "},{"id":1,"href":"/gitctx/docs/commands/","title":"Commands","section":"Docs","content":" Commands # This section documents the commands available in gitctx.\nThe core functionality is provided through a simple and consistent CLI interface built with Cobra.\nThe following pages are generated automatically from the CLI help output, ensuring they are always up to date with the latest version of gitctx.\nHow to read this section # Each command page includes:\nName \u0026amp; Synopsis – The command name and a brief description of what it does. Usage – The syntax for running the command. Options – Flags specific to that command. Examples – Common use cases and command-line examples. Running gitctx help # At any time, you can explore the CLI directly from your terminal:\n# List available commands gitctx help # Get help for a specific command gitctx help \u0026lt;command\u0026gt; "},{"id":2,"href":"/gitctx/docs/commands/gitctx/","title":"Gitctx","section":"Commands","content":" gitctx # A brief description of your application\nSynopsis # A longer description that spans multiple lines and likely contains examples and usage of using your application. For example:\nCobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.\nOptions # -h, --help help for gitctx -t, --toggle Help message for toggle SEE ALSO # gitctx add\t- A brief description of your command Auto generated by spf13/cobra on 10-Aug-2025 # "},{"id":3,"href":"/gitctx/docs/commands/gitctx_add/","title":"Gitctx Add","section":"Commands","content":" gitctx add # A brief description of your command\nSynopsis # A longer description that spans multiple lines and likely contains examples and usage of using your command. For example:\nCobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.\ngitctx add [flags] Options # -h, --help help for add SEE ALSO # gitctx\t- A brief description of your application Auto generated by spf13/cobra on 10-Aug-2025 # "}]