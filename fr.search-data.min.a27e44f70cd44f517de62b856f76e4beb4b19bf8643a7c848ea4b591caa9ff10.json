[{"id":0,"href":"/gitctx/fr/docs/intro/","title":"Documentation","section":"Docs","content":" Introduction # Qu\u0026rsquo;est-ce que gitctx ? # gitctx est un outil en ligne de commande léger écrit en Go qui aide les développeurs à gérer et basculer entre plusieurs contextes Git (identités) sans effort.\nQue vous contribuiez à des projets open-source, travailliez dans plusieurs entreprises, ou souhaitiez simplement séparer vos commits personnels et professionnels, gitctx rend la gestion des identités simple. Il centralise vos profils .gitconfig en un seul endroit et vous donne des commandes pour :\nStocker un nombre illimité de contextes Git nommés Appliquer un contexte globalement ou localement à un seul dépôt Basculer rapidement entre votre identité actuelle et précédente Gérer les clés SSH et GPG par contexte Diagramme Mermaid # flowchart TD subgraph Utilisateur A[CLI gitctx] end subgraph Stockage B1[~/.gitctx/context-travail.gitconfig] B2[~/.gitctx/context-personnel.gitconfig] B3[~/.gitctx/metadata.json] end subgraph Système Git C1[\u0026#34;~/.gitconfig (global)\u0026#34;] C2[\u0026#34;.git/config (local)\u0026#34;] end A --\u0026gt; |ajouter| B1 A --\u0026gt; |ajouter| B2 A --\u0026gt; |ajouter| B3 A --\u0026gt; |appliquer \u0026lt;nom\u0026gt;| C1 A --\u0026gt; |appliquer local \u0026lt;nom\u0026gt;| C2 A --\u0026gt; |supprimer local| C2 A --\u0026gt; |basculer| C1 A --\u0026gt; |supprimer| B1 A --\u0026gt; |supprimer| B2 A --\u0026gt; |utilise métadonnées| B3 style B3 fill:#fef3c7,stroke:#fbbf24,stroke-width:2px style A fill:#e0f2fe,stroke:#38bdf8,stroke-width:2px style C1 fill:#dcfce7,stroke:#22c55e,stroke-width:2px style C2 fill:#dcfce7,stroke:#22c55e,stroke-width:2px Pourquoi utiliser gitctx ? # Basculer manuellement entre les identités Git est sujet aux erreurs et chronophage. Vous avez probablement :\nCommité avec la mauvaise adresse e-mail sur le mauvais dépôt Perdu du temps à éditer .gitconfig à la main Oublié de revenir à votre profil personnel avant de pousser Avec gitctx, vous pouvez : Changer d\u0026rsquo;identité en quelques secondes Garder vos configurations Git organisées et faciles à sauvegarder Éviter des erreurs coûteuses en suivant clairement votre identité actuelle Intégrer avec des outils comme LazyGit pour des workflows encore plus fluides Comment ça fonctionne # gitctx stocke vos contextes dans ~/.gitctx/ sous forme de fichiers .gitconfig simples et suit les métadonnées comme :\nLe contexte actuel en cours d\u0026rsquo;utilisation Le contexte précédent (pour un basculement rapide) Quand vous appliquez un contexte : Le mode global met à jour votre ~/.gitconfig principal Le mode local s\u0026rsquo;applique seulement au dépôt le plus proche (.git/config) Parce que les contextes sont juste des fichiers .gitconfig, vous pouvez les éditer manuellement ou les importer/exporter facilement. Exemple d\u0026rsquo;utilisation # # Créer un nouveau contexte de manière interactive gitctx add travail # L\u0026#39;appliquer globalement gitctx apply travail # Revenir à votre contexte précédent gitctx switch # Appliquer un contexte seulement pour le dépôt actuel gitctx local apply personnel "},{"id":1,"href":"/gitctx/fr/docs/commands/","title":"Commandes","section":"Docs","content":" Commandes # Cette section documente les commandes disponibles dans gitctx.\nLes fonctionnalités principales sont fournies via une interface CLI simple et cohérente, construite avec Cobra.\nLes pages suivantes sont générées automatiquement à partir de la sortie d’aide de la CLI, garantissant qu’elles sont toujours à jour avec la dernière version de gitctx.\nComment lire cette section # Chaque page de commande inclut :\nNom \u0026amp; Synopsis – Le nom de la commande et une brève description de son rôle. Utilisation – La syntaxe pour exécuter la commande. Options – Les options (flags) spécifiques à cette commande. Exemples – Des cas d’usage fréquents et des exemples de commandes. Exécuter gitctx help # À tout moment, vous pouvez explorer la CLI directement depuis votre terminal :\n# Lister les commandes disponibles gitctx help # Obtenir de l’aide sur une commande spécifique gitctx help \u0026lt;commande\u0026gt; "},{"id":2,"href":"/gitctx/fr/docs/commands/gitctx/","title":"Gitctx","section":"Commandes","content":" gitctx # A brief description of your application\nSynopsis # A longer description that spans multiple lines and likely contains examples and usage of using your application. For example:\nCobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.\nOptions # -h, --help help for gitctx -t, --toggle Help message for toggle SEE ALSO # gitctx add\t- A brief description of your command Auto generated by spf13/cobra on 10-Aug-2025 # "},{"id":3,"href":"/gitctx/fr/docs/commands/gitctx_add/","title":"Gitctx Add","section":"Commandes","content":" gitctx add # A brief description of your command\nSynopsis # A longer description that spans multiple lines and likely contains examples and usage of using your command. For example:\nCobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.\ngitctx add [flags] Options # -h, --help help for add SEE ALSO # gitctx\t- A brief description of your application Auto generated by spf13/cobra on 10-Aug-2025 # "}]